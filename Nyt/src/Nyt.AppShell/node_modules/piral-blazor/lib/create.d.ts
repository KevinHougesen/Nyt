import type { PiralPlugin } from 'piral-core';
import type { BlazorLogLevel, PiletBlazorApi, WebAssemblyStartOptions } from './types';
/**
 * Available configuration options for the Blazor plugin.
 */
export interface BlazorConfig {
    /**
     * Determines if Blazor should only be loaded on demand.
     * @default true
     */
    lazy?: boolean;
    /**
     * Determines the used log level, if any. Otherwise, will use
     * the default log level (info).
     */
    logLevel?: BlazorLogLevel;
    /**
     * Determines the initial language to use, if any.
     * Otherwise, falls back to Blazor's default language.
     */
    initialLanguage?: string;
    /**
     * Installs a function to handle language change. By default,
     * this will hook on to the `select-language` event from Piral.
     * @param inform The callback to use for passing in a new locale.
     */
    onLanguageChange?: ((inform: (language: string) => void) => void) | false;
    /**
     * Determines the start options to use for booting Blazor.
     */
    options?: WebAssemblyStartOptions;
}
/**
 * Creates new Pilet API extensions for integration of Blazor.
 */
export declare function createBlazorApi(config?: BlazorConfig): PiralPlugin<PiletBlazorApi>;
